scalar Time

type Order {
    ID: Int
    Title: String
    Content: String
    UpdatedAt: Time
    CreatedAt: Time
}

type Edge {
    cursor: String
    node: Order
}

type PageInfo {
    endCursor: String
    hasNextPage: Boolean
}

type OrdersResult {
    edges: [Edge]
    pageInfo: PageInfo
    totalCount: Int
}

type Query {
    FetchOrder(after: String, first: Int): OrdersResult
    GetOrderByID(id: Int): Order
    GetOrderByTitle(title: String): Order
}

type Mutation {
    UpdateOrder(id: Int, title: String, content: String): Order
    StoreOrder(title: String, content: String): Order
    DeleteOrder(id: Int): Int
}
